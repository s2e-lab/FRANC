{"task_id": "1519736", "prompt": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {", "old_prompt": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n    \t\ta[i]=arr[i%(int)rand.nextInt(arr.length)];\n    \t}\n\n}\n}", "repair_prompt": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n", "suggestions": [{"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n    \t\tint r = (int)(((double)arr[i]) * rand.nextDouble() / (double)RAND_MAX - 0.5);\n    \t\ta[i]=r;\n    \t}\n    \tshuffle(a);\n    \tfor(int i=0; i<arr.length; i++) {\n    \t\tarr[i]=a[i];\n    \t}\n    }\n    \n    public static void shuffle(double[] arr", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n    \t\tint r = (int)(((double)arr[i]) * rand.nextDouble() / (double)RAND_MAX - 0.5);\n    \t\ta[i]=r;\n    \t}\n    \tshuffle(a);\n    \tfor(int i=0; i<arr.length; i++) {\n    \t\tarr[i]=a[i];\n    \t}\n    }\n    \n}", "time_taken_static_filter": 0.004998922348022461, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:24: error: cannot find symbol\n    \t\tint r = (int)(((double)arr[i]) * rand.nextDouble() / (double)RAND_MAX - 0.5);\n    \t\t                                                             ^\n  symbol:   variable RAND_MAX\n  location: class ID_1519736\n1 error\n", "time_taken_quality_filter": 2.406747817993164}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n                int r = rand.nextInt(arr.length);\n            int temp = a[r];\n            a[r] = a[i];\n            a[i] = temp;\n        }\n\n    }\n}\n\n/*\n * Copyright (c) Facebook, Inc. and its affiliates.\n * All rights reserved.\n * This", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n                int r = rand.nextInt(arr.length);\n            int temp = a[r];\n            a[r] = a[i];\n            a[i] = temp;\n        }\n\n    }\n}", "time_taken_static_filter": 0.011742830276489258, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683677044533", "@analysisTimestamp": "1683677046283", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1519736.class"}, "BugInstance": [{"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@priority": "1", "@rank": "14", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "@instanceHash": "a8c66b771426784482594893a5898d3", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "440", "ShortMessage": "Random object created and used only once", "LongMessage": "Random object created and used only once in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "30", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-30]"}, "Message": "In class ID_1519736"}, "Method": [{"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "30", "@startBytecode": "0", "@endBytecode": "130", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, {"@classname": "java.util.Random", "@name": "nextInt", "@signature": "(I)I", "@isStatic": "false", "@role": "METHOD_CALLED", "SourceLine": {"@classname": "java.util.Random", "@start": "387", "@end": "400", "@startBytecode": "0", "@endBytecode": "154", "@sourcefile": "Random.java", "@sourcepath": "java/util/Random.java"}, "Message": "Called method java.util.Random.nextInt(int)"}], "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "24", "@end": "24", "@startBytecode": "24", "@endBytecode": "24", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 24]"}}, {"@type": "UC_USELESS_OBJECT", "@priority": "2", "@rank": "17", "@abbrev": "UC", "@category": "STYLE", "@instanceHash": "9d7902eb78023158d8775964d32767c7", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "ShortMessage": "Useless object created", "LongMessage": "Useless object stored in variable var$2 of method ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "30", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-30]"}, "Message": "In class ID_1519736"}, "Method": {"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "30", "@startBytecode": "0", "@endBytecode": "130", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, "String": {"@value": "var$2", "Message": "Value var$2"}, "Type": {"@descriptor": "[I", "Message": "Type int[]"}, "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "18", "@end": "18", "@startBytecode": "10", "@endBytecode": "10", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 18]"}}], "BugCategory": [{"@category": "BAD_PRACTICE", "Description": "Bad practice"}, {"@category": "STYLE", "Description": "Dodgy code"}], "BugPattern": [{"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "ShortDescription": "Random object created and used only once", "Details": "<p> This code creates a java.util.Random object, uses it to generate one random number, and then discards\nthe Random object. This produces mediocre quality random numbers and is inefficient.\nIf possible, rewrite the code so that the Random object is created once and saved, and each time a new random number\nis required invoke a method on the existing Random object to obtain it.\n</p>\n\n<p>If it is important that the generated Random numbers not be guessable, you <em>must</em> not create a new Random for each random\nnumber; the values are too easily guessable. You should strongly consider using a java.security.SecureRandom instead\n(and avoid allocating a new SecureRandom for each random number needed).\n</p>"}, {"@type": "UC_USELESS_OBJECT", "@abbrev": "UC", "@category": "STYLE", "ShortDescription": "Useless object created", "Details": "<p>Our analysis shows that this object is useless.\nIt's created and modified, but its value never go outside of the method or produce any side-effect.\nEither there is a mistake and object was intended to be used or it can be removed.</p>\n<p>This analysis rarely produces false-positives. Common false-positive cases include:</p>\n<p>- This object used to implicitly throw some obscure exception.</p>\n<p>- This object used as a stub to generalize the code.</p>\n<p>- This object used to hold strong references to weak/soft-referenced objects.</p>"}], "BugCode": [{"@abbrev": "DMI", "@cweid": "440", "Description": "Dubious method invocation"}, {"@abbrev": "UC", "Description": "Useless code"}], "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Tue, 9 May 2023 20:04:04 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "2", "@total_size": "12", "@num_packages": "1", "@java_version": "1.8.0_362", "@vm_version": "25.362-b08", "@cpu_seconds": "5.39", "@clock_seconds": "2.16", "@peak_mbytes": "125.30", "@alloc_mbytes": "1820.50", "@gc_seconds": "0.08", "@priority_2": "1", "@priority_1": "1", "FileStats": {"@path": "temp.java", "@bugCount": "2", "@size": "12", "@bugHash": "9194fc3b1864378323d4a3bc6eaaff4a"}, "PackageStats": {"@package": "", "@total_bugs": "2", "@total_types": "1", "@total_size": "12", "@priority_2": "1", "@priority_1": "1", "ClassStats": {"@class": "ID_1519736", "@sourceFile": "temp.java", "@interface": "false", "@size": "12", "@bugs": "2", "@priority_2": "1", "@priority_1": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "547", "@invocations": "311", "@avgMicrosecondsPerInvocation": "1758", "@maxMicrosecondsPerInvocation": "47051", "@standardDeviationMicrosecondsPerInvocation": "4252"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "207", "@invocations": "10", "@avgMicrosecondsPerInvocation": "20736", "@maxMicrosecondsPerInvocation": "102966", "@standardDeviationMicrosecondsPerInvocation": "31679"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "139", "@invocations": "10", "@avgMicrosecondsPerInvocation": "13989", "@maxMicrosecondsPerInvocation": "70913", "@standardDeviationMicrosecondsPerInvocation": "20389"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "129", "@invocations": "43", "@avgMicrosecondsPerInvocation": "3013", "@maxMicrosecondsPerInvocation": "14421", "@standardDeviationMicrosecondsPerInvocation": "3660"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "87", "@invocations": "278", "@avgMicrosecondsPerInvocation": "313", "@maxMicrosecondsPerInvocation": "6182", "@standardDeviationMicrosecondsPerInvocation": "771"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "60", "@invocations": "26", "@avgMicrosecondsPerInvocation": "2315", "@maxMicrosecondsPerInvocation": "16198", "@standardDeviationMicrosecondsPerInvocation": "3954"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "54", "@invocations": "10", "@avgMicrosecondsPerInvocation": "5405", "@maxMicrosecondsPerInvocation": "29754", "@standardDeviationMicrosecondsPerInvocation": "9030"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "41", "@invocations": "10", "@avgMicrosecondsPerInvocation": "4189", "@maxMicrosecondsPerInvocation": "11570", "@standardDeviationMicrosecondsPerInvocation": "3474"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 4.556876182556152}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n              rand.setSeed(i+arr.length);  \n              rand.shuffle(a);\n//             a = a.clone();\n            arr[i] = a[rand.nextInt(a.length)];\n    } \n} \n    \n}  \n\n// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code", "applied_heuristics": [], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n              rand.setSeed(i+arr.length);  \n              rand.shuffle(a);\n//             a = a.clone();\n            arr[i] = a[rand.nextInt(a.length)];\n    } \n} \n    \n}  \n\n// Copyright 2015 The Go Authors. All rights reserved.\n// Use of this source code", "time_taken_static_filter": 0.0007498264312744141, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:25: error: cannot find symbol\n              rand.shuffle(a);\n                  ^\n  symbol:   method shuffle(int[])\n  location: variable rand of type Random\n1 error\n", "time_taken_quality_filter": 2.4166061878204346}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n\n// Fixed Code:   1. Initialize an array with elements from 0-7\n//\t\t 2. Initialize a single random value from the array, and\n//\t\t 3. Write the new value of the array to the array in the second loop,\n//\t\t 4. Read the new array back out the array, and\n\t\t \n\t\ta[i] = rand.nextInt(7);\n\n// Fixed Code:   2. Initialize a byte array with bytes (0xFF, 0xAC, 0x11)\n\t\ta[i] = -((byte)rand.nextInt(255", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n}\n}", "time_taken_static_filter": 0.02777099609375, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683677051494", "@analysisTimestamp": "1683677053239", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1519736.class"}, "BugInstance": {"@type": "DLS_DEAD_LOCAL_STORE", "@priority": "1", "@rank": "15", "@abbrev": "DLS", "@category": "STYLE", "@instanceHash": "da5f7a5055607c3372db25d2270e9593", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "563", "ShortMessage": "Dead store to local variable", "LongMessage": "Dead store to $L1 in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "19", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-19]"}, "Message": "In class ID_1519736"}, "Method": {"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "19", "@startBytecode": "0", "@endBytecode": "8", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, "LocalVariable": {"@name": "?", "@register": "1", "@pc": "8", "@role": "LOCAL_VARIABLE_UNKNOWN", "Message": "Local variable stored in JVM register 1"}, "SourceLine": [{"@classname": "ID_1519736", "@primary": "true", "@start": "17", "@end": "17", "@startBytecode": "7", "@endBytecode": "7", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 17]"}, {"@classname": "ID_1519736", "@start": "18", "@end": "18", "@startBytecode": "12", "@endBytecode": "12", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "@role": "SOURCE_LINE_ANOTHER_INSTANCE", "Message": "Another occurrence at temp.java:[line 18]"}], "Property": [{"@name": "edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.DEAD_OBJECT_STORE", "@value": "true"}, {"@name": "edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME", "@value": "?"}, {"@name": "edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT", "@value": "true"}]}, "BugCategory": {"@category": "STYLE", "Description": "Dodgy code"}, "BugPattern": {"@type": "DLS_DEAD_LOCAL_STORE", "@abbrev": "DLS", "@category": "STYLE", "ShortDescription": "Dead store to local variable", "Details": "<p>\nThis instruction assigns a value to a local variable,\nbut the value is not read or used in any subsequent instruction.\nOften, this indicates an error, because the value computed is never\nused.\n</p>\n<p>\nNote that Sun's javac compiler often generates dead stores for\nfinal local variables. Because SpotBugs is a bytecode-based tool,\nthere is no easy way to eliminate these false positives.\n</p>"}, "BugCode": {"@abbrev": "DLS", "@cweid": "563", "Description": "Dead local store"}, "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Tue, 9 May 2023 20:04:11 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "1", "@total_size": "7", "@num_packages": "1", "@java_version": "1.8.0_362", "@vm_version": "25.362-b08", "@cpu_seconds": "5.18", "@clock_seconds": "1.96", "@peak_mbytes": "124.79", "@alloc_mbytes": "1820.50", "@gc_seconds": "0.09", "@priority_1": "1", "FileStats": {"@path": "temp.java", "@bugCount": "1", "@size": "7", "@bugHash": "07a64c5b4da6e24c69698a01a225592b"}, "PackageStats": {"@package": "", "@total_bugs": "1", "@total_types": "1", "@total_size": "7", "@priority_1": "1", "ClassStats": {"@class": "ID_1519736", "@sourceFile": "temp.java", "@interface": "false", "@size": "7", "@bugs": "1", "@priority_1": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "483", "@invocations": "309", "@avgMicrosecondsPerInvocation": "1565", "@maxMicrosecondsPerInvocation": "36100", "@standardDeviationMicrosecondsPerInvocation": "3814"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "180", "@invocations": "10", "@avgMicrosecondsPerInvocation": "18025", "@maxMicrosecondsPerInvocation": "92784", "@standardDeviationMicrosecondsPerInvocation": "27192"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "123", "@invocations": "42", "@avgMicrosecondsPerInvocation": "2931", "@maxMicrosecondsPerInvocation": "20098", "@standardDeviationMicrosecondsPerInvocation": "4192"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "121", "@invocations": "10", "@avgMicrosecondsPerInvocation": "12141", "@maxMicrosecondsPerInvocation": "69976", "@standardDeviationMicrosecondsPerInvocation": "20517"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "79", "@invocations": "276", "@avgMicrosecondsPerInvocation": "289", "@maxMicrosecondsPerInvocation": "5300", "@standardDeviationMicrosecondsPerInvocation": "676"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "60", "@invocations": "10", "@avgMicrosecondsPerInvocation": "6071", "@maxMicrosecondsPerInvocation": "28855", "@standardDeviationMicrosecondsPerInvocation": "9436"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "48", "@invocations": "26", "@avgMicrosecondsPerInvocation": "1868", "@maxMicrosecondsPerInvocation": "16723", "@standardDeviationMicrosecondsPerInvocation": "3321"}, {"@name": "edu.umd.cs.findbugs.detect.BuildStringPassthruGraph", "@totalMilliseconds": "31", "@invocations": "10", "@avgMicrosecondsPerInvocation": "3103", "@maxMicrosecondsPerInvocation": "20535", "@standardDeviationMicrosecondsPerInvocation": "6090"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 4.356158971786499}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n            int t = rand.nextInt(arr.length);\n            int j=0;\n            while(a[j]==t){}\n            a[j]=t;\n        }\n    }\n  \n  \n    // Check for the correctness of our shuffle program:\n    // 1. Call the main function.\n    // 2", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n            int t = rand.nextInt(arr.length);\n            int j=0;\n            while(a[j]==t){}\n            a[j]=t;\n        }\n    }\n  \n  \n    // Check for the correctness of our shuffle program:\n    // 1. Call the main function.\n    // 2\n}", "time_taken_static_filter": 0.002026081085205078, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683677055860", "@analysisTimestamp": "1683677057648", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1519736.class"}, "BugInstance": {"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@priority": "1", "@rank": "14", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "@instanceHash": "a8c66b771426784482594893a5898d3", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "440", "ShortMessage": "Random object created and used only once", "LongMessage": "Random object created and used only once in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "29", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-29]"}, "Message": "In class ID_1519736"}, "Method": [{"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "29", "@startBytecode": "0", "@endBytecode": "139", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, {"@classname": "java.util.Random", "@name": "nextInt", "@signature": "(I)I", "@isStatic": "false", "@role": "METHOD_CALLED", "SourceLine": {"@classname": "java.util.Random", "@start": "387", "@end": "400", "@startBytecode": "0", "@endBytecode": "154", "@sourcefile": "Random.java", "@sourcepath": "java/util/Random.java"}, "Message": "Called method java.util.Random.nextInt(int)"}], "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "24", "@end": "24", "@startBytecode": "24", "@endBytecode": "24", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 24]"}}, "BugCategory": {"@category": "BAD_PRACTICE", "Description": "Bad practice"}, "BugPattern": {"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "ShortDescription": "Random object created and used only once", "Details": "<p> This code creates a java.util.Random object, uses it to generate one random number, and then discards\nthe Random object. This produces mediocre quality random numbers and is inefficient.\nIf possible, rewrite the code so that the Random object is created once and saved, and each time a new random number\nis required invoke a method on the existing Random object to obtain it.\n</p>\n\n<p>If it is important that the generated Random numbers not be guessable, you <em>must</em> not create a new Random for each random\nnumber; the values are too easily guessable. You should strongly consider using a java.security.SecureRandom instead\n(and avoid allocating a new SecureRandom for each random number needed).\n</p>"}, "BugCode": {"@abbrev": "DMI", "@cweid": "440", "Description": "Dubious method invocation"}, "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Tue, 9 May 2023 20:04:15 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "1", "@total_size": "12", "@num_packages": "1", "@java_version": "1.8.0_362", "@vm_version": "25.362-b08", "@cpu_seconds": "5.53", "@clock_seconds": "2.10", "@peak_mbytes": "125.63", "@alloc_mbytes": "1820.50", "@gc_seconds": "0.09", "@priority_1": "1", "FileStats": {"@path": "temp.java", "@bugCount": "1", "@size": "12", "@bugHash": "dc3b62527436fe947454205dfc19a6df"}, "PackageStats": {"@package": "", "@total_bugs": "1", "@total_types": "1", "@total_size": "12", "@priority_1": "1", "ClassStats": {"@class": "ID_1519736", "@sourceFile": "temp.java", "@interface": "false", "@size": "12", "@bugs": "1", "@priority_1": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "503", "@invocations": "311", "@avgMicrosecondsPerInvocation": "1617", "@maxMicrosecondsPerInvocation": "29409", "@standardDeviationMicrosecondsPerInvocation": "3769"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "156", "@invocations": "43", "@avgMicrosecondsPerInvocation": "3638", "@maxMicrosecondsPerInvocation": "19185", "@standardDeviationMicrosecondsPerInvocation": "4864"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "144", "@invocations": "10", "@avgMicrosecondsPerInvocation": "14485", "@maxMicrosecondsPerInvocation": "70732", "@standardDeviationMicrosecondsPerInvocation": "20688"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "133", "@invocations": "10", "@avgMicrosecondsPerInvocation": "13375", "@maxMicrosecondsPerInvocation": "76307", "@standardDeviationMicrosecondsPerInvocation": "21745"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "83", "@invocations": "278", "@avgMicrosecondsPerInvocation": "299", "@maxMicrosecondsPerInvocation": "5708", "@standardDeviationMicrosecondsPerInvocation": "701"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "60", "@invocations": "26", "@avgMicrosecondsPerInvocation": "2322", "@maxMicrosecondsPerInvocation": "17061", "@standardDeviationMicrosecondsPerInvocation": "3948"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "58", "@invocations": "10", "@avgMicrosecondsPerInvocation": "5878", "@maxMicrosecondsPerInvocation": "25639", "@standardDeviationMicrosecondsPerInvocation": "9229"}, {"@name": "edu.umd.cs.findbugs.detect.BuildStringPassthruGraph", "@totalMilliseconds": "54", "@invocations": "10", "@avgMicrosecondsPerInvocation": "5463", "@maxMicrosecondsPerInvocation": "33168", "@standardDeviationMicrosecondsPerInvocation": "9901"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "35", "@invocations": "10", "@avgMicrosecondsPerInvocation": "3569", "@maxMicrosecondsPerInvocation": "10995", "@standardDeviationMicrosecondsPerInvocation": "2916"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 4.530979156494141}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n                a[(i+6)/9] = i;\n            }\n    \tshuffle(arr, 0, arr.length-1, a, rand);    \n    }\n   public static void shuffle(int[] arr, int low, int high, int[] a, Random rand){\n        int rangeSize = high-low+1;\n\n        for(int i=low;", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n                a[(i+6)/9] = i;\n            }\n    \tshuffle(arr, 0, arr.length-1, a, rand);    \n    }\n   public static void shuffle(int[] arr, int low, int high, int[] a, Random rand){\n        int rangeSize = high-low+1;\n\n}\n}", "time_taken_static_filter": 0.0035610198974609375, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683677060405", "@analysisTimestamp": "1683677062122", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1519736.class"}, "BugInstance": {"@type": "DLS_DEAD_LOCAL_STORE", "@priority": "2", "@rank": "17", "@abbrev": "DLS", "@category": "STYLE", "@instanceHash": "19c5f5a5ea08e9f63779017c6861327c", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "563", "ShortMessage": "Dead store to local variable", "LongMessage": "Dead store to $L5 in ID_1519736.shuffle(int[], int, int, int[], Random)", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "31", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-31]"}, "Message": "In class ID_1519736"}, "Method": {"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([III[ILjava/util/Random;)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "29", "@end": "31", "@startBytecode": "0", "@endBytecode": "6", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[], int, int, int[], Random)"}, "LocalVariable": {"@name": "?", "@register": "5", "@pc": "7", "@role": "LOCAL_VARIABLE_UNKNOWN", "Message": "Local variable stored in JVM register 5"}, "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "29", "@end": "29", "@startBytecode": "5", "@endBytecode": "5", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 29]"}, "Property": [{"@name": "edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.BASE_VALUE", "@value": "true"}, {"@name": "edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME", "@value": "?"}, {"@name": "edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS", "@value": "true"}]}, "BugCategory": {"@category": "STYLE", "Description": "Dodgy code"}, "BugPattern": {"@type": "DLS_DEAD_LOCAL_STORE", "@abbrev": "DLS", "@category": "STYLE", "ShortDescription": "Dead store to local variable", "Details": "<p>\nThis instruction assigns a value to a local variable,\nbut the value is not read or used in any subsequent instruction.\nOften, this indicates an error, because the value computed is never\nused.\n</p>\n<p>\nNote that Sun's javac compiler often generates dead stores for\nfinal local variables. Because SpotBugs is a bytecode-based tool,\nthere is no easy way to eliminate these false positives.\n</p>"}, "BugCode": {"@abbrev": "DLS", "@cweid": "563", "Description": "Dead local store"}, "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Tue, 9 May 2023 20:04:20 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "1", "@total_size": "13", "@num_packages": "1", "@java_version": "1.8.0_362", "@vm_version": "25.362-b08", "@cpu_seconds": "5.22", "@clock_seconds": "2.06", "@peak_mbytes": "125.38", "@alloc_mbytes": "1820.50", "@gc_seconds": "0.08", "@priority_2": "1", "FileStats": {"@path": "temp.java", "@bugCount": "1", "@size": "13", "@bugHash": "945a7956f46537036624be1cd0d040aa"}, "PackageStats": {"@package": "", "@total_bugs": "1", "@total_types": "1", "@total_size": "13", "@priority_2": "1", "ClassStats": {"@class": "ID_1519736", "@sourceFile": "temp.java", "@interface": "false", "@size": "13", "@bugs": "1", "@priority_2": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "505", "@invocations": "313", "@avgMicrosecondsPerInvocation": "1615", "@maxMicrosecondsPerInvocation": "30159", "@standardDeviationMicrosecondsPerInvocation": "3535"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "161", "@invocations": "10", "@avgMicrosecondsPerInvocation": "16136", "@maxMicrosecondsPerInvocation": "93084", "@standardDeviationMicrosecondsPerInvocation": "26612"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "143", "@invocations": "10", "@avgMicrosecondsPerInvocation": "14340", "@maxMicrosecondsPerInvocation": "56528", "@standardDeviationMicrosecondsPerInvocation": "17989"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "120", "@invocations": "44", "@avgMicrosecondsPerInvocation": "2740", "@maxMicrosecondsPerInvocation": "15652", "@standardDeviationMicrosecondsPerInvocation": "3470"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "81", "@invocations": "279", "@avgMicrosecondsPerInvocation": "293", "@maxMicrosecondsPerInvocation": "5963", "@standardDeviationMicrosecondsPerInvocation": "734"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "56", "@invocations": "26", "@avgMicrosecondsPerInvocation": "2158", "@maxMicrosecondsPerInvocation": "12223", "@standardDeviationMicrosecondsPerInvocation": "3156"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "55", "@invocations": "10", "@avgMicrosecondsPerInvocation": "5580", "@maxMicrosecondsPerInvocation": "33894", "@standardDeviationMicrosecondsPerInvocation": "10171"}, {"@name": "edu.umd.cs.findbugs.detect.BuildStringPassthruGraph", "@totalMilliseconds": "39", "@invocations": "10", "@avgMicrosecondsPerInvocation": "3916", "@maxMicrosecondsPerInvocation": "16980", "@standardDeviationMicrosecondsPerInvocation": "5803"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "32", "@invocations": "10", "@avgMicrosecondsPerInvocation": "3295", "@maxMicrosecondsPerInvocation": "12052", "@standardDeviationMicrosecondsPerInvocation": "3486"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 4.43168306350708}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n    \trand.nextInt();\n        int temp;\n    \ttemp = arr[i];\n    \tarr[i] = a [rand.nextInt(a.length)];\n    \ta [rand.nextInt(a.length)] = temp;\n        }\n    }\n}\n\n/*\n    SPDX-FileCopyrightText: 2008 Joris Guisson <joris.guisson@gmail.com>\n\n    SPDX-License-", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n    \trand.nextInt();\n        int temp;\n    \ttemp = arr[i];\n    \tarr[i] = a [rand.nextInt(a.length)];\n    \ta [rand.nextInt(a.length)] = temp;\n        }\n    }\n}", "time_taken_static_filter": 0.013098001480102539, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683677064829", "@analysisTimestamp": "1683677066565", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1519736.class"}, "BugInstance": [{"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@priority": "1", "@rank": "14", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "@instanceHash": "7e762ddaaeb9762fab41acb23841ad56", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "440", "ShortMessage": "Random object created and used only once", "LongMessage": "Random object created and used only once in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "30", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-30]"}, "Message": "In class ID_1519736"}, "Method": [{"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "30", "@startBytecode": "0", "@endBytecode": "135", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, {"@classname": "java.util.Random", "@name": "nextInt", "@signature": "()I", "@isStatic": "false", "@role": "METHOD_CALLED", "SourceLine": {"@classname": "java.util.Random", "@start": "329", "@end": "329", "@startBytecode": "0", "@endBytecode": "30", "@sourcefile": "Random.java", "@sourcepath": "java/util/Random.java"}, "Message": "Called method java.util.Random.nextInt()"}], "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "24", "@end": "24", "@startBytecode": "22", "@endBytecode": "22", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 24]"}}, {"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@priority": "1", "@rank": "14", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "@instanceHash": "a8c66b771426784482594893a5898d3", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "440", "ShortMessage": "Random object created and used only once", "LongMessage": "Random object created and used only once in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "30", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-30]"}, "Message": "In class ID_1519736"}, "Method": [{"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "30", "@startBytecode": "0", "@endBytecode": "135", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, {"@classname": "java.util.Random", "@name": "nextInt", "@signature": "(I)I", "@isStatic": "false", "@role": "METHOD_CALLED", "SourceLine": {"@classname": "java.util.Random", "@start": "387", "@end": "400", "@startBytecode": "0", "@endBytecode": "154", "@sourcefile": "Random.java", "@sourcepath": "java/util/Random.java"}, "Message": "Called method java.util.Random.nextInt(int)"}], "SourceLine": [{"@classname": "ID_1519736", "@primary": "true", "@start": "27", "@end": "27", "@startBytecode": "37", "@endBytecode": "37", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 27]"}, {"@classname": "ID_1519736", "@start": "28", "@end": "28", "@startBytecode": "46", "@endBytecode": "46", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "@role": "SOURCE_LINE_ANOTHER_INSTANCE", "Message": "Another occurrence at temp.java:[line 28]"}]}], "BugCategory": {"@category": "BAD_PRACTICE", "Description": "Bad practice"}, "BugPattern": {"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "ShortDescription": "Random object created and used only once", "Details": "<p> This code creates a java.util.Random object, uses it to generate one random number, and then discards\nthe Random object. This produces mediocre quality random numbers and is inefficient.\nIf possible, rewrite the code so that the Random object is created once and saved, and each time a new random number\nis required invoke a method on the existing Random object to obtain it.\n</p>\n\n<p>If it is important that the generated Random numbers not be guessable, you <em>must</em> not create a new Random for each random\nnumber; the values are too easily guessable. You should strongly consider using a java.security.SecureRandom instead\n(and avoid allocating a new SecureRandom for each random number needed).\n</p>"}, "BugCode": {"@abbrev": "DMI", "@cweid": "440", "Description": "Dubious method invocation"}, "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Tue, 9 May 2023 20:04:24 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "2", "@total_size": "12", "@num_packages": "1", "@java_version": "1.8.0_362", "@vm_version": "25.362-b08", "@cpu_seconds": "5.36", "@clock_seconds": "2.07", "@peak_mbytes": "125.24", "@alloc_mbytes": "1820.50", "@gc_seconds": "0.09", "@priority_1": "2", "FileStats": {"@path": "temp.java", "@bugCount": "2", "@size": "12", "@bugHash": "27f5cb45c00785fd2713628a1e1ad3d0"}, "PackageStats": {"@package": "", "@total_bugs": "2", "@total_types": "1", "@total_size": "12", "@priority_1": "2", "ClassStats": {"@class": "ID_1519736", "@sourceFile": "temp.java", "@interface": "false", "@size": "12", "@bugs": "2", "@priority_1": "2"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "493", "@invocations": "311", "@avgMicrosecondsPerInvocation": "1587", "@maxMicrosecondsPerInvocation": "41686", "@standardDeviationMicrosecondsPerInvocation": "3576"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "175", "@invocations": "10", "@avgMicrosecondsPerInvocation": "17556", "@maxMicrosecondsPerInvocation": "60037", "@standardDeviationMicrosecondsPerInvocation": "22979"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "134", "@invocations": "10", "@avgMicrosecondsPerInvocation": "13458", "@maxMicrosecondsPerInvocation": "70852", "@standardDeviationMicrosecondsPerInvocation": "20843"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "121", "@invocations": "43", "@avgMicrosecondsPerInvocation": "2822", "@maxMicrosecondsPerInvocation": "15088", "@standardDeviationMicrosecondsPerInvocation": "3463"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "89", "@invocations": "278", "@avgMicrosecondsPerInvocation": "320", "@maxMicrosecondsPerInvocation": "6857", "@standardDeviationMicrosecondsPerInvocation": "793"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "67", "@invocations": "26", "@avgMicrosecondsPerInvocation": "2612", "@maxMicrosecondsPerInvocation": "16024", "@standardDeviationMicrosecondsPerInvocation": "4345"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "51", "@invocations": "10", "@avgMicrosecondsPerInvocation": "5118", "@maxMicrosecondsPerInvocation": "25783", "@standardDeviationMicrosecondsPerInvocation": "7895"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "39", "@invocations": "10", "@avgMicrosecondsPerInvocation": "3995", "@maxMicrosecondsPerInvocation": "11563", "@standardDeviationMicrosecondsPerInvocation": "3470"}, {"@name": "edu.umd.cs.findbugs.detect.BuildStringPassthruGraph", "@totalMilliseconds": "29", "@invocations": "10", "@avgMicrosecondsPerInvocation": "2961", "@maxMicrosecondsPerInvocation": "17676", "@standardDeviationMicrosecondsPerInvocation": "5083"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 4.465490102767944}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n        do {\n            a[i] = rand.nextInt(arr.length);\n        }\n        while (a[i] <= arr[i]);\n    }\n// End Code\n    \tshuffleArray(arr);\n    \tint last = arr.length-1;\n    \tfor(int i=0; i<arr.length; i++)\n    \t\tswap(arr,", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n        do {\n            a[i] = rand.nextInt(arr.length);\n        }\n        while (a[i] <= arr[i]);\n    }\n// End Code\n    \tshuffleArray(arr);\n    \tint last = arr.length-1;\n}\n}", "time_taken_static_filter": 0.006618976593017578, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:30: error: cannot find symbol\n    \tshuffleArray(arr);\n    \t^\n  symbol:   method shuffleArray(int[])\n  location: class ID_1519736\n1 error\n", "time_taken_quality_filter": 2.383193016052246}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n    \tint j=0;\n    \ta[i] = rand.nextInt(j+arr.length);\n    \tj++;\n\n// Fix: Make random object shorter\n    }\n\n    }\n}\n\n<?php\n\nnamespace Kunstmaan\\MediaWikiBundle\\Tests\\Helper;\n\nuse Kunstmaan\\MediaWikiBundle\\Helper\\TagHelper;\nuse Kunstmaan\\MediaWikiBundle\\Helper\\TagNodeTransformer;\nuse PHPUnit\\Framework\\TestCase;\nuse", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n    \tint j=0;\n    \ta[i] = rand.nextInt(j+arr.length);\n    \tj++;\n\n// Fix: Make random object shorter\n    }\n\n    }\n}", "time_taken_static_filter": 0.018224000930786133, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683677071673", "@analysisTimestamp": "1683677073401", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1519736.class"}, "BugInstance": [{"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@priority": "1", "@rank": "14", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "@instanceHash": "a8c66b771426784482594893a5898d3", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "440", "ShortMessage": "Random object created and used only once", "LongMessage": "Random object created and used only once in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "31", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-31]"}, "Message": "In class ID_1519736"}, "Method": [{"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "31", "@startBytecode": "0", "@endBytecode": "118", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, {"@classname": "java.util.Random", "@name": "nextInt", "@signature": "(I)I", "@isStatic": "false", "@role": "METHOD_CALLED", "SourceLine": {"@classname": "java.util.Random", "@start": "387", "@end": "400", "@startBytecode": "0", "@endBytecode": "154", "@sourcefile": "Random.java", "@sourcepath": "java/util/Random.java"}, "Message": "Called method java.util.Random.nextInt(int)"}], "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "25", "@end": "25", "@startBytecode": "32", "@endBytecode": "32", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 25]"}}, {"@type": "UC_USELESS_OBJECT", "@priority": "2", "@rank": "17", "@abbrev": "UC", "@category": "STYLE", "@instanceHash": "9d7902eb78023158d8775964d32767c7", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "ShortMessage": "Useless object created", "LongMessage": "Useless object stored in variable var$2 of method ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "31", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-31]"}, "Message": "In class ID_1519736"}, "Method": {"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "31", "@startBytecode": "0", "@endBytecode": "118", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, "String": {"@value": "var$2", "Message": "Value var$2"}, "Type": {"@descriptor": "[I", "Message": "Type int[]"}, "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "18", "@end": "18", "@startBytecode": "10", "@endBytecode": "10", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 18]"}}], "BugCategory": [{"@category": "BAD_PRACTICE", "Description": "Bad practice"}, {"@category": "STYLE", "Description": "Dodgy code"}], "BugPattern": [{"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "ShortDescription": "Random object created and used only once", "Details": "<p> This code creates a java.util.Random object, uses it to generate one random number, and then discards\nthe Random object. This produces mediocre quality random numbers and is inefficient.\nIf possible, rewrite the code so that the Random object is created once and saved, and each time a new random number\nis required invoke a method on the existing Random object to obtain it.\n</p>\n\n<p>If it is important that the generated Random numbers not be guessable, you <em>must</em> not create a new Random for each random\nnumber; the values are too easily guessable. You should strongly consider using a java.security.SecureRandom instead\n(and avoid allocating a new SecureRandom for each random number needed).\n</p>"}, {"@type": "UC_USELESS_OBJECT", "@abbrev": "UC", "@category": "STYLE", "ShortDescription": "Useless object created", "Details": "<p>Our analysis shows that this object is useless.\nIt's created and modified, but its value never go outside of the method or produce any side-effect.\nEither there is a mistake and object was intended to be used or it can be removed.</p>\n<p>This analysis rarely produces false-positives. Common false-positive cases include:</p>\n<p>- This object used to implicitly throw some obscure exception.</p>\n<p>- This object used as a stub to generalize the code.</p>\n<p>- This object used to hold strong references to weak/soft-referenced objects.</p>"}], "BugCode": [{"@abbrev": "DMI", "@cweid": "440", "Description": "Dubious method invocation"}, {"@abbrev": "UC", "Description": "Useless code"}], "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Tue, 9 May 2023 20:04:31 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "2", "@total_size": "11", "@num_packages": "1", "@java_version": "1.8.0_362", "@vm_version": "25.362-b08", "@cpu_seconds": "5.24", "@clock_seconds": "2.04", "@peak_mbytes": "124.04", "@alloc_mbytes": "1820.50", "@gc_seconds": "0.09", "@priority_2": "1", "@priority_1": "1", "FileStats": {"@path": "temp.java", "@bugCount": "2", "@size": "11", "@bugHash": "85e55b9f1ba7a7193c667d244052d925"}, "PackageStats": {"@package": "", "@total_bugs": "2", "@total_types": "1", "@total_size": "11", "@priority_2": "1", "@priority_1": "1", "ClassStats": {"@class": "ID_1519736", "@sourceFile": "temp.java", "@interface": "false", "@size": "11", "@bugs": "2", "@priority_2": "1", "@priority_1": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "516", "@invocations": "311", "@avgMicrosecondsPerInvocation": "1662", "@maxMicrosecondsPerInvocation": "57296", "@standardDeviationMicrosecondsPerInvocation": "4524"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "169", "@invocations": "10", "@avgMicrosecondsPerInvocation": "16979", "@maxMicrosecondsPerInvocation": "71738", "@standardDeviationMicrosecondsPerInvocation": "23613"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "131", "@invocations": "43", "@avgMicrosecondsPerInvocation": "3056", "@maxMicrosecondsPerInvocation": "16639", "@standardDeviationMicrosecondsPerInvocation": "3863"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "122", "@invocations": "10", "@avgMicrosecondsPerInvocation": "12292", "@maxMicrosecondsPerInvocation": "60918", "@standardDeviationMicrosecondsPerInvocation": "17937"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "86", "@invocations": "278", "@avgMicrosecondsPerInvocation": "312", "@maxMicrosecondsPerInvocation": "7829", "@standardDeviationMicrosecondsPerInvocation": "824"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "62", "@invocations": "26", "@avgMicrosecondsPerInvocation": "2410", "@maxMicrosecondsPerInvocation": "16148", "@standardDeviationMicrosecondsPerInvocation": "3908"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "50", "@invocations": "10", "@avgMicrosecondsPerInvocation": "5096", "@maxMicrosecondsPerInvocation": "26891", "@standardDeviationMicrosecondsPerInvocation": "8405"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "27", "@invocations": "10", "@avgMicrosecondsPerInvocation": "2738", "@maxMicrosecondsPerInvocation": "9117", "@standardDeviationMicrosecondsPerInvocation": "2853"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 4.414792776107788}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n\n    \tint idx = rand.nextInt(arr.length);\n    \tint val = arr[ idx ];\n    \ta[i] = val;\n    \trand.nextInt();\n\n// Fixed Code \n    }\n\n        System.out.println(\n    \t\tArrays.toString(a));\n    }\n     \n    \n    \n        /**\n         * Write", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\n\nclass ID_1519736{\n    /**\n     * Write a function to shuffle randomly a given array.\n     * \n     * Example:\n     * int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n     * shuffle(arr);\n     * \n     * output: [4, 2, 3, 1, 5, 6, 7, 8, 9]\n     */\n    public static void shuffle(int[] arr) {\n    \tRandom rand = new Random();\n    \tint[] a = new int[arr.length];\n    \tfor(int i=0; i<arr.length; i++) {\n// Fix: Random object created and used only once\n// Fix: Useless object created\n\n// Fixed Code: \n\n    \tint idx = rand.nextInt(arr.length);\n    \tint val = arr[ idx ];\n    \ta[i] = val;\n    \trand.nextInt();\n\n// Fixed Code \n    }\n\n        System.out.println(\n    \t\tArrays.toString(a));\n    }\n     \n    \n    \n}", "time_taken_static_filter": 0.004101991653442383, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683677076125", "@analysisTimestamp": "1683677077854", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1519736.class"}, "BugInstance": [{"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@priority": "1", "@rank": "14", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "@instanceHash": "7e762ddaaeb9762fab41acb23841ad56", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "440", "ShortMessage": "Random object created and used only once", "LongMessage": "Random object created and used only once in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "35", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-35]"}, "Message": "In class ID_1519736"}, "Method": [{"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "35", "@startBytecode": "0", "@endBytecode": "150", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, {"@classname": "java.util.Random", "@name": "nextInt", "@signature": "()I", "@isStatic": "false", "@role": "METHOD_CALLED", "SourceLine": {"@classname": "java.util.Random", "@start": "329", "@end": "329", "@startBytecode": "0", "@endBytecode": "30", "@sourcefile": "Random.java", "@sourcepath": "java/util/Random.java"}, "Message": "Called method java.util.Random.nextInt()"}], "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "28", "@end": "28", "@startBytecode": "41", "@endBytecode": "41", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 28]"}}, {"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@priority": "1", "@rank": "14", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "@instanceHash": "a8c66b771426784482594893a5898d3", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "440", "ShortMessage": "Random object created and used only once", "LongMessage": "Random object created and used only once in ID_1519736.shuffle(int[])", "Class": {"@classname": "ID_1519736", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "6", "@end": "35", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 6-35]"}, "Message": "In class ID_1519736"}, "Method": [{"@classname": "ID_1519736", "@name": "shuffle", "@signature": "([I)V", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1519736", "@start": "17", "@end": "35", "@startBytecode": "0", "@endBytecode": "150", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1519736.shuffle(int[])"}, {"@classname": "java.util.Random", "@name": "nextInt", "@signature": "(I)I", "@isStatic": "false", "@role": "METHOD_CALLED", "SourceLine": {"@classname": "java.util.Random", "@start": "387", "@end": "400", "@startBytecode": "0", "@endBytecode": "154", "@sourcefile": "Random.java", "@sourcepath": "java/util/Random.java"}, "Message": "Called method java.util.Random.nextInt(int)"}], "SourceLine": {"@classname": "ID_1519736", "@primary": "true", "@start": "25", "@end": "25", "@startBytecode": "24", "@endBytecode": "24", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 25]"}}], "BugCategory": {"@category": "BAD_PRACTICE", "Description": "Bad practice"}, "BugPattern": {"@type": "DMI_RANDOM_USED_ONLY_ONCE", "@abbrev": "DMI", "@category": "BAD_PRACTICE", "ShortDescription": "Random object created and used only once", "Details": "<p> This code creates a java.util.Random object, uses it to generate one random number, and then discards\nthe Random object. This produces mediocre quality random numbers and is inefficient.\nIf possible, rewrite the code so that the Random object is created once and saved, and each time a new random number\nis required invoke a method on the existing Random object to obtain it.\n</p>\n\n<p>If it is important that the generated Random numbers not be guessable, you <em>must</em> not create a new Random for each random\nnumber; the values are too easily guessable. You should strongly consider using a java.security.SecureRandom instead\n(and avoid allocating a new SecureRandom for each random number needed).\n</p>"}, "BugCode": {"@abbrev": "DMI", "@cweid": "440", "Description": "Dubious method invocation"}, "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Tue, 9 May 2023 20:04:36 -0400", "@total_classes": "1", "@referenced_classes": "14", "@total_bugs": "2", "@total_size": "14", "@num_packages": "1", "@java_version": "1.8.0_362", "@vm_version": "25.362-b08", "@cpu_seconds": "6.99", "@clock_seconds": "2.53", "@peak_mbytes": "126.02", "@alloc_mbytes": "1820.50", "@gc_seconds": "0.09", "@priority_1": "2", "FileStats": {"@path": "temp.java", "@bugCount": "2", "@size": "14", "@bugHash": "22f62cf1340f4bb66cf6913b230e4ee5"}, "PackageStats": {"@package": "", "@total_bugs": "2", "@total_types": "1", "@total_size": "14", "@priority_1": "2", "ClassStats": {"@class": "ID_1519736", "@sourceFile": "temp.java", "@interface": "false", "@size": "14", "@bugs": "2", "@priority_1": "2"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "517", "@invocations": "386", "@avgMicrosecondsPerInvocation": "1341", "@maxMicrosecondsPerInvocation": "36535", "@standardDeviationMicrosecondsPerInvocation": "3256"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "259", "@invocations": "14", "@avgMicrosecondsPerInvocation": "18514", "@maxMicrosecondsPerInvocation": "63756", "@standardDeviationMicrosecondsPerInvocation": "18945"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "180", "@invocations": "131", "@avgMicrosecondsPerInvocation": "1377", "@maxMicrosecondsPerInvocation": "18058", "@standardDeviationMicrosecondsPerInvocation": "2767"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "169", "@invocations": "14", "@avgMicrosecondsPerInvocation": "12090", "@maxMicrosecondsPerInvocation": "34562", "@standardDeviationMicrosecondsPerInvocation": "10708"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "98", "@invocations": "352", "@avgMicrosecondsPerInvocation": "279", "@maxMicrosecondsPerInvocation": "5771", "@standardDeviationMicrosecondsPerInvocation": "732"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "82", "@invocations": "14", "@avgMicrosecondsPerInvocation": "5864", "@maxMicrosecondsPerInvocation": "28921", "@standardDeviationMicrosecondsPerInvocation": "7967"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "77", "@invocations": "33", "@avgMicrosecondsPerInvocation": "2335", "@maxMicrosecondsPerInvocation": "17888", "@standardDeviationMicrosecondsPerInvocation": "3646"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "74", "@invocations": "14", "@avgMicrosecondsPerInvocation": "5318", "@maxMicrosecondsPerInvocation": "26388", "@standardDeviationMicrosecondsPerInvocation": "6528"}, {"@name": "edu.umd.cs.findbugs.detect.CalledMethods", "@totalMilliseconds": "48", "@invocations": "14", "@avgMicrosecondsPerInvocation": "3472", "@maxMicrosecondsPerInvocation": "15702", "@standardDeviationMicrosecondsPerInvocation": "4487"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 4.9394450187683105}]}
