{"task_id": "1555262", "prompt": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {", "old_prompt": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}", "repair_prompt": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {", "suggestions": [{"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n     }\n\t\n\tprivate static List<Long> months;\n\t", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n     }\n\t\n\tprivate static List<Long> months;\n\t\n}", "time_taken_static_filter": 0.001867055892944336, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683330229000", "@analysisTimestamp": "1683330230375", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1555262.class"}, "BugInstance": [{"@type": "IL_INFINITE_RECURSIVE_LOOP", "@priority": "1", "@rank": "9", "@abbrev": "IL", "@category": "CORRECTNESS", "@instanceHash": "bf4dea17e016b3ac1acc7c865cc8f4a4", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "674", "ShortMessage": "An apparent infinite recursive loop", "LongMessage": "There is an apparent infinite recursive loop in ID_1555262.dateDifference(String, String)", "Class": {"@classname": "ID_1555262", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@start": "7", "@end": "24", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 7-24]"}, "Message": "In class ID_1555262"}, "Method": {"@classname": "ID_1555262", "@name": "dateDifference", "@signature": "(Ljava/lang/String;Ljava/lang/String;)I", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@start": "19", "@end": "24", "@startBytecode": "0", "@endBytecode": "81", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1555262.dateDifference(String, String)"}, "SourceLine": {"@classname": "ID_1555262", "@primary": "true", "@start": "19", "@end": "19", "@startBytecode": "2", "@endBytecode": "2", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 19]"}}, {"@type": "UUF_UNUSED_FIELD", "@priority": "2", "@rank": "18", "@abbrev": "UuF", "@category": "PERFORMANCE", "@instanceHash": "e7900796341e0366641c57e2060a6d6d", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "ShortMessage": "Unused field", "LongMessage": "Unused field: ID_1555262.months", "Class": {"@classname": "ID_1555262", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@start": "7", "@end": "24", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 7-24]"}, "Message": "In class ID_1555262"}, "Field": {"@classname": "ID_1555262", "@name": "months", "@signature": "Ljava/util/List;", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "In temp.java"}, "Message": "Field ID_1555262.months"}, "SourceLine": {"@classname": "ID_1555262", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "@synthetic": "true", "Message": "In temp.java"}}], "BugCategory": [{"@category": "CORRECTNESS", "Description": "Correctness"}, {"@category": "PERFORMANCE", "Description": "Performance"}], "BugPattern": [{"@type": "UUF_UNUSED_FIELD", "@abbrev": "UuF", "@category": "PERFORMANCE", "ShortDescription": "Unused field", "Details": "<p> This field is never used.&nbsp; Consider removing it from the class.</p>"}, {"@type": "IL_INFINITE_RECURSIVE_LOOP", "@abbrev": "IL", "@category": "CORRECTNESS", "@cweid": "674", "ShortDescription": "An apparent infinite recursive loop", "Details": "<p>This method unconditionally invokes itself. This would seem to indicate\nan infinite recursive loop that will result in a stack overflow.</p>"}], "BugCode": [{"@abbrev": "IL", "Description": "Infinite Loop"}, {"@abbrev": "UuF", "Description": "Unused field"}], "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Fri, 5 May 2023 19:43:49 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "2", "@total_size": "9", "@num_packages": "1", "@java_version": "1.8.0_345", "@vm_version": "25.345-b01", "@cpu_seconds": "5.71", "@clock_seconds": "0.80", "@peak_mbytes": "340.06", "@alloc_mbytes": "27305.00", "@gc_seconds": "0.07", "@priority_2": "1", "@priority_1": "1", "FileStats": {"@path": "temp.java", "@bugCount": "2", "@size": "9", "@bugHash": "3e9fbb1d26e19c1964d0ea3bed4e8f71"}, "PackageStats": {"@package": "", "@total_bugs": "2", "@total_types": "1", "@total_size": "9", "@priority_2": "1", "@priority_1": "1", "ClassStats": {"@class": "ID_1555262", "@sourceFile": "temp.java", "@interface": "false", "@size": "9", "@bugs": "2", "@priority_2": "1", "@priority_1": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "135", "@invocations": "305", "@avgMicrosecondsPerInvocation": "443", "@maxMicrosecondsPerInvocation": "11320", "@standardDeviationMicrosecondsPerInvocation": "1047"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "29", "@invocations": "10", "@avgMicrosecondsPerInvocation": "2967", "@maxMicrosecondsPerInvocation": "11124", "@standardDeviationMicrosecondsPerInvocation": "3644"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "28", "@invocations": "59", "@avgMicrosecondsPerInvocation": "475", "@maxMicrosecondsPerInvocation": "3558", "@standardDeviationMicrosecondsPerInvocation": "596"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory", "@totalMilliseconds": "24", "@invocations": "2", "@avgMicrosecondsPerInvocation": "12028", "@maxMicrosecondsPerInvocation": "23509", "@standardDeviationMicrosecondsPerInvocation": "11481"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "22", "@invocations": "25", "@avgMicrosecondsPerInvocation": "888", "@maxMicrosecondsPerInvocation": "12996", "@standardDeviationMicrosecondsPerInvocation": "2560"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "20", "@invocations": "272", "@avgMicrosecondsPerInvocation": "76", "@maxMicrosecondsPerInvocation": "1109", "@standardDeviationMicrosecondsPerInvocation": "157"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "17", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1719", "@maxMicrosecondsPerInvocation": "7613", "@standardDeviationMicrosecondsPerInvocation": "2245"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "14", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1407", "@maxMicrosecondsPerInvocation": "7165", "@standardDeviationMicrosecondsPerInvocation": "2055"}, {"@name": "edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical", "@totalMilliseconds": "13", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1374", "@maxMicrosecondsPerInvocation": "9718", "@standardDeviationMicrosecondsPerInvocation": "2826"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "11", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1110", "@maxMicrosecondsPerInvocation": "5081", "@standardDeviationMicrosecondsPerInvocation": "1584"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 2.52487850189209}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        // Set this here to be safe (since there is no direct access to this\n        // field of this class).\n        // See JLS1 Section 35 of the Javadoc.\n        // The constructor call for ID_552636. Will call the class initializers\n        // for the class itself and it'll be inaccessible (note that this is a\n        // hack, but we want to avoid the JLS1", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        // Set this here to be safe (since there is no direct access to this\n        // field of this class).\n        // See JLS1 Section 35 of the Javadoc.\n        // The constructor call for ID_552636. Will call the class initializers\n        // for the class itself and it'll be inaccessible (note that this is a\n        // hack, but we want to avoid the JLS1\n}\n}", "time_taken_static_filter": 0.0005376338958740234, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:25: error: missing return statement\n}\n^\n1 error\n", "time_taken_quality_filter": 1.645507574081421}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        long diff = Long.parseLong(date1) - Long.parseLong(date2);\n        if (diff < 0L) {\n            return -1;\n        }\n        else {\n            return Integer.valueOf(diff);\n        }\n    }\n    \n    public static double dateDifference(List<", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        long diff = Long.parseLong(date1) - Long.parseLong(date2);\n        if (diff < 0L) {\n            return -1;\n        }\n        else {\n            return Integer.valueOf(diff);\n        }\n    }\n    \n}", "time_taken_static_filter": 0.002418994903564453, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:24: error: no suitable method found for valueOf(long)\n            return Integer.valueOf(diff);\n                          ^\n    method Integer.valueOf(String) is not applicable\n      (argument mismatch; long cannot be converted to String)\n    method Integer.valueOf(int) is not applicable\n      (argument mismatch; possible lossy conversion from long to int)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n", "time_taken_quality_filter": 1.69309401512146}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        return ((double)days / (Double)1000.0);\n    }\n    \n    /**\n     * Read data from a text file.  Reads first line which will\n     * be printed by this function.\n     * \n     * This function tries to read several lines from a stream and \n     * prints them.  Reads the header of the line, the body of the \n     * line, and the body of the line, printing each line", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        return ((double)days / (Double)1000.0);\n    }\n    \n}", "time_taken_static_filter": 0.005113124847412109, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:19: error: cannot find symbol\n        return ((double)days / (Double)1000.0);\n                        ^\n  symbol:   variable days\n  location: class ID_1555262\ntemp.java:19: error: incompatible types: possible lossy conversion from double to int\n        return ((double)days / (Double)1000.0);\n                             ^\n2 errors\n", "time_taken_quality_filter": 1.624781608581543}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1,.toDouble()));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n        \n    }\n}\n// Fix:", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n}\n}", "time_taken_static_filter": 0.014746904373168945, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:19: error: missing return statement\n}\n^\n1 error\n", "time_taken_quality_filter": 1.6719167232513428}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int daysDiff;\n        if(date2.compareTo(\"2017-01-02\")==0 || date1.compareTo(\"2017-01-01\")==0 || date1.compareTo(\"2017-12-01\")==0){\n            daysDiff=7;\n        }\n        else {\n            List<String> list1 = new ArrayList<String>();\n      ", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int daysDiff;\n        if(date2.compareTo(\"2017-01-02\")==0 || date1.compareTo(\"2017-01-01\")==0 || date1.compareTo(\"2017-12-01\")==0){\n            daysDiff=7;\n        }\n}\n}", "time_taken_static_filter": 0.005914926528930664, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:23: error: missing return statement\n}\n^\n1 error\n", "time_taken_quality_filter": 1.7699224948883057}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        double yearFraction = date2.indexOf(date1) < 0?\n                         date1.indexOf(date2) > -1?\n                                 date2 :\n                               ", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n}\n}", "time_taken_static_filter": 0.005489826202392578, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:19: error: missing return statement\n}\n^\n1 error\n", "time_taken_quality_filter": 1.678792953491211}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if (days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n    }\n}\n\n/*\n *    GeoTools - The", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if (days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n    }\n}", "time_taken_static_filter": 0.006430149078369141, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683330241000", "@analysisTimestamp": "1683330242932", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1555262.class"}, "BugInstance": {"@type": "IL_INFINITE_RECURSIVE_LOOP", "@priority": "1", "@rank": "9", "@abbrev": "IL", "@category": "CORRECTNESS", "@instanceHash": "bf4dea17e016b3ac1acc7c865cc8f4a4", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "674", "ShortMessage": "An apparent infinite recursive loop", "LongMessage": "There is an apparent infinite recursive loop in ID_1555262.dateDifference(String, String)", "Class": {"@classname": "ID_1555262", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@start": "7", "@end": "24", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 7-24]"}, "Message": "In class ID_1555262"}, "Method": {"@classname": "ID_1555262", "@name": "dateDifference", "@signature": "(Ljava/lang/String;Ljava/lang/String;)I", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@start": "19", "@end": "24", "@startBytecode": "0", "@endBytecode": "81", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1555262.dateDifference(String, String)"}, "SourceLine": {"@classname": "ID_1555262", "@primary": "true", "@start": "19", "@end": "19", "@startBytecode": "2", "@endBytecode": "2", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 19]"}}, "BugCategory": {"@category": "CORRECTNESS", "Description": "Correctness"}, "BugPattern": {"@type": "IL_INFINITE_RECURSIVE_LOOP", "@abbrev": "IL", "@category": "CORRECTNESS", "@cweid": "674", "ShortDescription": "An apparent infinite recursive loop", "Details": "<p>This method unconditionally invokes itself. This would seem to indicate\nan infinite recursive loop that will result in a stack overflow.</p>"}, "BugCode": {"@abbrev": "IL", "Description": "Infinite Loop"}, "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Fri, 5 May 2023 19:44:01 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "1", "@total_size": "8", "@num_packages": "1", "@java_version": "1.8.0_345", "@vm_version": "25.345-b01", "@cpu_seconds": "5.68", "@clock_seconds": "0.82", "@peak_mbytes": "340.14", "@alloc_mbytes": "27305.00", "@gc_seconds": "0.07", "@priority_1": "1", "FileStats": {"@path": "temp.java", "@bugCount": "1", "@size": "8", "@bugHash": "489c2f9a5ae85b5bac2135e0bbfac297"}, "PackageStats": {"@package": "", "@total_bugs": "1", "@total_types": "1", "@total_size": "8", "@priority_1": "1", "ClassStats": {"@class": "ID_1555262", "@sourceFile": "temp.java", "@interface": "false", "@size": "8", "@bugs": "1", "@priority_1": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "134", "@invocations": "305", "@avgMicrosecondsPerInvocation": "440", "@maxMicrosecondsPerInvocation": "10936", "@standardDeviationMicrosecondsPerInvocation": "1036"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "30", "@invocations": "10", "@avgMicrosecondsPerInvocation": "3071", "@maxMicrosecondsPerInvocation": "11397", "@standardDeviationMicrosecondsPerInvocation": "3754"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "28", "@invocations": "59", "@avgMicrosecondsPerInvocation": "483", "@maxMicrosecondsPerInvocation": "3528", "@standardDeviationMicrosecondsPerInvocation": "612"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory", "@totalMilliseconds": "24", "@invocations": "2", "@avgMicrosecondsPerInvocation": "12398", "@maxMicrosecondsPerInvocation": "24196", "@standardDeviationMicrosecondsPerInvocation": "11798"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "22", "@invocations": "25", "@avgMicrosecondsPerInvocation": "891", "@maxMicrosecondsPerInvocation": "12824", "@standardDeviationMicrosecondsPerInvocation": "2547"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "19", "@invocations": "272", "@avgMicrosecondsPerInvocation": "72", "@maxMicrosecondsPerInvocation": "1064", "@standardDeviationMicrosecondsPerInvocation": "144"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "17", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1725", "@maxMicrosecondsPerInvocation": "7849", "@standardDeviationMicrosecondsPerInvocation": "2298"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "14", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1411", "@maxMicrosecondsPerInvocation": "7221", "@standardDeviationMicrosecondsPerInvocation": "2084"}, {"@name": "edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical", "@totalMilliseconds": "13", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1332", "@maxMicrosecondsPerInvocation": "9847", "@standardDeviationMicrosecondsPerInvocation": "2874"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "11", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1121", "@maxMicrosecondsPerInvocation": "5162", "@standardDeviationMicrosecondsPerInvocation": "1608"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 2.5009303092956543}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        List<DateDifference> daysList = new ArrayList<DateDifference>();\n        Calendar currentCalendar = Calendar.getInstance();\n        currentCalendar.setTime(date1);\n        currentCalendar.setTime(currentCalendar.getTime());\n        currentCalendar.add(Calendar.YEAR, -4);\n        currentCalendar.add(Calendar.MONTH, -13);\n        currentCalendar.add(Calendar", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        List<DateDifference> daysList = new ArrayList<DateDifference>();\n        Calendar currentCalendar = Calendar.getInstance();\n        currentCalendar.setTime(date1);\n        currentCalendar.setTime(currentCalendar.getTime());\n        currentCalendar.add(Calendar.YEAR, -4);\n        currentCalendar.add(Calendar.MONTH, -13);\n}\n}", "time_taken_static_filter": 0.0027608871459960938, "Is_Vulnerable": false, "Analyzer_Result": "", "Is_Compilable": false, "Error": "temp.java:19: error: cannot find symbol\n        List<DateDifference> daysList = new ArrayList<DateDifference>();\n             ^\n  symbol:   class DateDifference\n  location: class ID_1555262\ntemp.java:19: error: cannot find symbol\n        List<DateDifference> daysList = new ArrayList<DateDifference>();\n                                                      ^\n  symbol:   class DateDifference\n  location: class ID_1555262\ntemp.java:21: error: incompatible types: String cannot be converted to Date\n        currentCalendar.setTime(date1);\n                                ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n", "time_taken_quality_filter": 1.6496763229370117}, {"generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));\n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);\n        }\n                  \n}\n}\n// Fix: At line 19, An apparent infinite recursive loop\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));        \n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);         \n        }\n   ", "applied_heuristics": ["H7"], "fixed_generated_text": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.math.*;\nimport java.time.*;\n\nclass ID_1555262{\n    /**\n     * Write a function to calculate th difference between two dates.\n     * \n     * Example:\n     * String date1 = \"2018-01-01\";\n     * String date2 = \"2018-01-02\";\n     * int days = dateDifference(date1, date2);\n     * \n     * output: 1\n     */\n    public static int dateDifference(String date1, String date2) {\n        int days = Integer.valueOf(dateDifference(date1, date2));        \n        if(days == Integer.MIN_VALUE) {\n            return Integer.valueOf(1);\n        }\n        else{\n            return Integer.valueOf(days);         \n        }\n   \n}\n}", "time_taken_static_filter": 0.001010894775390625, "Is_Vulnerable": true, "Analyzer_Result": {"BugCollection": {"@version": "4.7.3", "@sequence": "0", "@timestamp": "1683330245000", "@analysisTimestamp": "1683330247067", "@release": "", "Project": {"@projectName": "", "Jar": "ID_1555262.class"}, "BugInstance": {"@type": "IL_INFINITE_RECURSIVE_LOOP", "@priority": "1", "@rank": "9", "@abbrev": "IL", "@category": "CORRECTNESS", "@instanceHash": "bf4dea17e016b3ac1acc7c865cc8f4a4", "@instanceOccurrenceNum": "0", "@instanceOccurrenceMax": "0", "@cweid": "674", "ShortMessage": "An apparent infinite recursive loop", "LongMessage": "There is an apparent infinite recursive loop in ID_1555262.dateDifference(String, String)", "Class": {"@classname": "ID_1555262", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@start": "7", "@end": "24", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[lines 7-24]"}, "Message": "In class ID_1555262"}, "Method": {"@classname": "ID_1555262", "@name": "dateDifference", "@signature": "(Ljava/lang/String;Ljava/lang/String;)I", "@isStatic": "true", "@primary": "true", "SourceLine": {"@classname": "ID_1555262", "@start": "19", "@end": "24", "@startBytecode": "0", "@endBytecode": "81", "@sourcefile": "temp.java", "@sourcepath": "temp.java"}, "Message": "In method ID_1555262.dateDifference(String, String)"}, "SourceLine": {"@classname": "ID_1555262", "@primary": "true", "@start": "19", "@end": "19", "@startBytecode": "2", "@endBytecode": "2", "@sourcefile": "temp.java", "@sourcepath": "temp.java", "Message": "At temp.java:[line 19]"}}, "BugCategory": {"@category": "CORRECTNESS", "Description": "Correctness"}, "BugPattern": {"@type": "IL_INFINITE_RECURSIVE_LOOP", "@abbrev": "IL", "@category": "CORRECTNESS", "@cweid": "674", "ShortDescription": "An apparent infinite recursive loop", "Details": "<p>This method unconditionally invokes itself. This would seem to indicate\nan infinite recursive loop that will result in a stack overflow.</p>"}, "BugCode": {"@abbrev": "IL", "Description": "Infinite Loop"}, "Errors": {"@errors": "0", "@missingClasses": "0"}, "FindBugsSummary": {"@timestamp": "Fri, 5 May 2023 19:44:05 -0400", "@total_classes": "1", "@referenced_classes": "10", "@total_bugs": "1", "@total_size": "8", "@num_packages": "1", "@java_version": "1.8.0_345", "@vm_version": "25.345-b01", "@cpu_seconds": "5.86", "@clock_seconds": "0.80", "@peak_mbytes": "340.15", "@alloc_mbytes": "27305.00", "@gc_seconds": "0.05", "@priority_1": "1", "FileStats": {"@path": "temp.java", "@bugCount": "1", "@size": "8", "@bugHash": "489c2f9a5ae85b5bac2135e0bbfac297"}, "PackageStats": {"@package": "", "@total_bugs": "1", "@total_types": "1", "@total_size": "8", "@priority_1": "1", "ClassStats": {"@class": "ID_1555262", "@sourceFile": "temp.java", "@interface": "false", "@size": "8", "@bugs": "1", "@priority_1": "1"}}, "FindBugsProfile": {"ClassProfile": [{"@name": "edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine", "@totalMilliseconds": "138", "@invocations": "305", "@avgMicrosecondsPerInvocation": "454", "@maxMicrosecondsPerInvocation": "11786", "@standardDeviationMicrosecondsPerInvocation": "1079"}, {"@name": "edu.umd.cs.findbugs.detect.FieldItemSummary", "@totalMilliseconds": "30", "@invocations": "10", "@avgMicrosecondsPerInvocation": "3086", "@maxMicrosecondsPerInvocation": "11379", "@standardDeviationMicrosecondsPerInvocation": "3756"}, {"@name": "edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory", "@totalMilliseconds": "28", "@invocations": "59", "@avgMicrosecondsPerInvocation": "486", "@maxMicrosecondsPerInvocation": "3642", "@standardDeviationMicrosecondsPerInvocation": "607"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory", "@totalMilliseconds": "25", "@invocations": "2", "@avgMicrosecondsPerInvocation": "12513", "@maxMicrosecondsPerInvocation": "24462", "@standardDeviationMicrosecondsPerInvocation": "11949"}, {"@name": "edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine", "@totalMilliseconds": "21", "@invocations": "25", "@avgMicrosecondsPerInvocation": "873", "@maxMicrosecondsPerInvocation": "13008", "@standardDeviationMicrosecondsPerInvocation": "2561"}, {"@name": "edu.umd.cs.findbugs.util.TopologicalSort", "@totalMilliseconds": "20", "@invocations": "272", "@avgMicrosecondsPerInvocation": "75", "@maxMicrosecondsPerInvocation": "1330", "@standardDeviationMicrosecondsPerInvocation": "159"}, {"@name": "edu.umd.cs.findbugs.detect.FindNoSideEffectMethods", "@totalMilliseconds": "18", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1868", "@maxMicrosecondsPerInvocation": "8170", "@standardDeviationMicrosecondsPerInvocation": "2403"}, {"@name": "edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers", "@totalMilliseconds": "13", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1395", "@maxMicrosecondsPerInvocation": "7446", "@standardDeviationMicrosecondsPerInvocation": "2153"}, {"@name": "edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical", "@totalMilliseconds": "13", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1376", "@maxMicrosecondsPerInvocation": "10163", "@standardDeviationMicrosecondsPerInvocation": "2967"}, {"@name": "edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures", "@totalMilliseconds": "11", "@invocations": "10", "@avgMicrosecondsPerInvocation": "1142", "@maxMicrosecondsPerInvocation": "5378", "@standardDeviationMicrosecondsPerInvocation": "1655"}]}}, "ClassFeatures": null, "History": null}}, "Is_Compilable": true, "Error": "", "time_taken_quality_filter": 2.456939220428467}]}
